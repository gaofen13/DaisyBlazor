@page "/"

<DaisyRadialProgress Color="Color.Primary" Value="10" BgColor="Color.Secondary"></DaisyRadialProgress>
<DaisyProgress Indeterminate Value="20" Max="100"></DaisyProgress>

<DaisyAlert Title="Info">
    <DaisyButton>关闭</DaisyButton>
</DaisyAlert>
<DaisyTooltip Class="w-full" Text="alert">
    <DaisyAlert Title="Warning" AlertLevel="Level.Warning" Filled />
</DaisyTooltip>

<DaisyButtonGroup Vertical>
    <DaisyButton Color="@color" OnClick="@(()=>add+=1)">Button @add</DaisyButton>
    <DaisyButton Color="Color.Secondary" OnClick="@Toggle">Button2</DaisyButton>
    <DaisyButton Color="Color.Error" OnClick="@ShowToast">Button3</DaisyButton>
</DaisyButtonGroup>

<EditForm Model="string.Empty">
    <DaisyField Label="输入框">
        <DaisyInputText @ref="@_input" @bind-Value=input Bordered="@true" AutoFocus="@true" />
    </DaisyField>
    <DaisyField Label="选择器">
        <DaisySelect @bind-Value=color>
            <DaisySelectOption DefaultSelected Disabled TValue="Color?" Value="null">请选择</DaisySelectOption>
            <DaisySelectOption Value="Color.Primary">Primary</DaisySelectOption>
            <DaisySelectOption Value="Color.Secondary">Secondary</DaisySelectOption>
            <DaisySelectOption Value="Color.Accent">Accent</DaisySelectOption>
        </DaisySelect>
    </DaisyField>
    <DaisyField Label="单选器">
        <DaisyRadioGroup @bind-Value="@color">
            <DaisyRadio Label="Primary" Value="Color.Primary" />
            <DaisyRadio Label="Secondary" Value="Color.Secondary" />
            <DaisyRadio Label="Accent" Value="Color.Accent" />
        </DaisyRadioGroup>
    </DaisyField>
    <DaisyField Label="复选框">
        <DaisyCheckbox Label="开启Modal" @bind-Value="check" />
    </DaisyField>
</EditForm>

<DaisyModal @bind-Visible=check Options="new ModalOptions{ClickBackgroundCancel=true}">
    <DaisyButton OnClick="_=>check=false">关闭</DaisyButton>
    <DaisyButton OnClick="@(_=>Navigation?.NavigateTo("code"))">跳转</DaisyButton>
</DaisyModal>

@code {
    private DaisyInputText? _input;
    private bool check;
    private string input = "";
    private int add;
    private Color color = Color.Info;

    [Inject] private NavigationManager? Navigation { get; set; }
    [Inject] private ModalService? Modal { get; set; }
    [Inject] private ToastService? Toast { get; set; }

    private async Task Toggle()
    {
        var parameters = new ModalParameters();
        parameters.Add("Test", "Dialog");
        var reference = Modal?.Show<DailogTest>(parameters, new ModalOptions { ClickBackgroundCancel = true });
        var res = await reference!.Result;
        if (res.Data?.ToString() == "test")
        {
            _input?.Input?.Element?.FocusAsync();
        }
    }

    private void ShowToast()
    {
        add++;
        Toast?.ShowError(add.ToString(), "Error", new ToastOptions { TimeOut = 3000 });
        Toast?.ShowToast<ToastTest>(Level.Info, new ToastOptions { TimeOut = 4000 });
        Toast?.ShowSuccess(add.ToString(), "Success");
    }
}